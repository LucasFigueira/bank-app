package com.example.demo.exception;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets ErrorCodeEnum
 */
public enum ErrorCodeEnum {
	ACCOUNT_NOT_FOUND("ACCOUNT_NOT_FOUND"),
	ACCESS_DENIED("ACCESS_DENIED"),
    CAMPAIGN_ALREADY_DELETED("CAMPAIGN_ALREADY_DELETED"),
    CAMPAIGN_ALREADY_EXISTS("CAMPAIGN_ALREADY_EXISTS"),
    CAMPAIGN_ALREADY_EXPIRED("CAMPAIGN_ALREADY_EXPIRED"),
    CAMPAIGN_NOT_FOUND("CAMPAIGN_NOT_FOUND"),
    CUSTOMER_NOT_FOUND("CUSTOMER_NOT_FOUND"),
    DRAFT_NOT_FOUND("DRAFT_NOT_FOUND"),
    ELIGIBLE_FILE_NOT_FOUND("ELIGIBLE_FILE_NOT_FOUND"),
    END_DATE_CANNOT_BE_DECREASED("END_DATE_CANNOT_BE_DECREASED"),
    END_DATE_LESS_THAN_CURRENT_DATE("END_DATE_LESS_THAN_CURRENT_DATE"),
    INDICATED_EMAIL_REQUIRED("INDICATED_EMAIL_REQUIRED"),
    INDICATED_PHONE_REQUIRED("INDICATED_PHONE_REQUIRED"),
    INDICATION_ALREADY_USED("INDICATION_ALREADY_USED"),
    INDICATION_NOT_FOUND("INDICATION_NOT_FOUND"),
    INDICATION_MAIL_MESSAGE_MAX_SIZE("INDICATION_MAIL_MESSAGE_MAX_SIZE"),
    INDICATION_SMS_MESSAGE_MAX_SIZE("INDICATION_SMS_MESSAGE_MAX_SIZE"),
    INVALID_FILE("INVALID_FILE"),
    INVALID_CAMPAIGN_STATUS("INVALID_CAMPAIGN_STATUS"),
    INVALID_COMMUNCATION_TYPE("INVALID_COMMUNCATION_TYPE"),
    LEVEL_SIZE_NOT_RIGHT("LEVEL_SIZE_NOT_RIGHT"),
    MISSION_SIZE_NOT_RIGHTS("MISSION_SIZE_NOT_RIGHTs"),
    MESSAGE_SEND_ERROR("MESSAGE_SEND_ERROR"),
    NEGATIVE_EMAIL_ID("NEGATIVE_EMAIL_ID"),
    ONLINE_CAMPAIGN_WITHOUT_PARTNER_URL("ONLINE_CAMPAIGN_WITHOUT_PARTNER_URL"),
    PARTNER_ALREADY_EXISTS("PARTNER_ALREADY_EXISTS"),
    PARTNER_NOT_FOUND("PARTNER_NOT_FOUND"),
    PARTNER_CODE_REQUIRED("PARTNER_CODE_REQUIRED"),
    PAYLOAD_TOO_LARGE("PAYLOAD_TOO_LARGE"),
    START_DATE_AND_END_DATE_CANNOT_BE_THE_SAME_TODAY("START_DATE_AND_END_DATE_CANNOT_BE_THE_SAME_TODAY"),
    START_DATE_GREATER_THAN_END_DATE("START_DATE_GREATER_THAN_END_DATE"),
    TOO_MANY_REQUESTS("TOO_MANY_REQUESTS"),
    UNEXPECTED_ERROR("UNEXPECTED_ERROR"),
    VALIDATION_ERROR("VALIDATION_ERROR"),
    UNAUTHORIZED("UNAUTHORIZED");

  private String value;

  ErrorCodeEnum(String value) {
    this.value = value;
  }

  @Override
  @JsonValue
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ErrorCodeEnum fromValue(String text) {
    for (ErrorCodeEnum b : ErrorCodeEnum.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }
}
